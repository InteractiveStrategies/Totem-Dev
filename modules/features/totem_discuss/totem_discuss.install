<?php
/**
 * @file
 * totem_discuss.install
 */

/**
 * Implements hook_install().
 */
function totem_discuss_install() {

  // Set variables.
  _totem_discuss_install_variables();

  // Give this module heaviest weight.
  _totem_common_system_max_weight('totem_discuss');

}

// Installation tasks.
/**
 * TODO.
 */
function _totem_discuss_install_variables() {

  // Set variables.
  // Used by hook_node_access to trigger CRUD access checks.
  variable_set('node_permissions_topic', 1);
  variable_set('node_options_topic', array('status'));
  variable_set('node_submitted_topic', TRUE);
  variable_set('comment_subject_field_topic', FALSE);
  variable_set('comment_default_mode_topic', COMMENT_MODE_THREADED);
  variable_set('comment_default_per_page_topic', '300');
  variable_set('internal_nodes_action_topic', '404');
  variable_set('internal_nodes_nodes_topic', 0);
  variable_set('internal_nodes_url_topic', '');

  variable_set('mailsystem_theme', 'current');
  variable_set('mail_system', array(
    'default-system' => 'MimeMailSystem',
    'mimemail' => 'MimeMailSystem',
  ));
  // variable_set('mimemail_engine', NULL);
  variable_set('mimemail_format', 'filtered_html');
  variable_set('mimemail_incoming', 0);
  variable_set('mimemail_key', 'c7b2fb1ea0fd38480989bd7119f5d225');
  variable_set('mimemail_linkonly', 0);
  variable_set('mimemail_mail', variable_get('site_mail'));
  variable_set('mimemail_name', variable_get('site_name'));
  variable_set('mimemail_simple_address', 0);
  variable_set('mimemail_sitestyle', 0);
  variable_set('mimemail_textonly', 0);
  variable_set('mimemail_theme', 'current');

  variable_set('privatemsg_default_redirect', '<new-message>');
  variable_set('privatemsg_default_redirect_reply', 0);
  variable_set('privatemsg_display_disabled_message', 1);
  variable_set('privatemsg_display_link_self', 1);
  variable_set('privatemsg_display_loginmessage', 0);
  variable_set('privatemsg_display_on_comments', 1);
  variable_set('privatemsg_display_on_teaser', 0);
  variable_set('privatemsg_display_preview_button', 0);
  variable_set('privatemsg_display_profile_links', 1);
  variable_set('privatemsg_flush_days', '1');
  variable_set('privatemsg_flush_enabled', 1);
  variable_set('privatemsg_flush_max', '500');
  variable_set('privatemsg_per_page', '25');
  variable_set('privatemsg_view_default_amount', '10');
  variable_set('privatemsg_view_max_amount', '20');
  variable_set('privatemsg_view_use_max_as_default', 0);
  variable_set('privatemsg_realname_search_username', 0);
  variable_set('privatemsg_realname_unique_identifier', 'uid');

  variable_set('privatemsg_link_node_types', array(
    'page' => 0,
    'community' => 0,
    'topic' => 'topic',
    'event' => 'event',
    'media' => 'media',
    'media_collection' => 'media_collection',
  ));

  variable_set('pm_email_notify_default', 1);
  variable_set('pm_email_notify_from', '');
  variable_set('pm_email_notify_subject', 'New private message at [site:name]');

  // Clientside Validation module does not block AJAX form submissions,
  // so exclude our AJAX-ified comment forms from it.
  // @see http://drupal.org/node/1486480
  variable_set('clientside_validation_validate_all', CLIENTSIDE_VALIDATION_VALIDATE_ALL_EXCEPT);
  // Note we cannot set only 'comment_form' as the form ID to exclude;
  // the comparison is made against the specific form ID, not the base form ID.
  // @see clientside_validation_form_alter()
  $comment_form_ids = array('comment_form');
  foreach (array_keys(_totem_common_node_types()) as $type) {
    $comment_form_ids[] = 'comment_node_' . $type . '_form';
  }
  // Make sure to append to this variable rather than overwrite.
  $cv_specific = variable_get('clientside_validation_validate_specific', '');
  $cv_specific = $cv_specific . "\n" . implode("\n", $comment_form_ids);
  variable_set('clientside_validation_validate_specific', $cv_specific);

  // Set stringoverrides.
  _totem_common_set_custom_string('Topic', 'Discussion');
  _totem_common_set_custom_string('topic', 'discussion');
  _totem_common_set_custom_string('Topics', 'Discussions');
  _totem_common_set_custom_string('topics', 'discussions');

}
